<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprpersonaje</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>velocidad=4;

llave=false;
llaveverde=false;
llaveazul=false;
llaveamarilla=false;
llaveroja=false;
llaverosa=false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Movimiento del jugador

if (!place_meeting(x-velocidad,y,objmuro))
    &amp;&amp;(!place_meeting(x-velocidad,y,objpuerta))
    &amp;&amp;(!place_meeting(x-velocidad,y,objpuertaclara))
    &amp;&amp;(!place_meeting(x-velocidad,y,objpuertaazul))
    &amp;&amp;(!place_meeting(x-velocidad,y,objpuertaroja))
    &amp;&amp;(!place_meeting(x-velocidad,y,objpuertaverde))
    &amp;&amp;(!place_meeting(x-velocidad,y,objpuertarosa))
    {
    if (keyboard_check(vk_left)) { x = x -  velocidad;}
    }
if (!place_meeting(x+velocidad,y,objmuro)
    &amp;&amp;(!place_meeting(x+velocidad,y,objpuerta)))
    &amp;&amp;(!place_meeting(x+velocidad,y,objpuertaclara))
    &amp;&amp;(!place_meeting(x+velocidad,y,objpuertaazul))
    &amp;&amp;(!place_meeting(x+velocidad,y,objpuertaroja))
    &amp;&amp;(!place_meeting(x+velocidad,y,objpuertaverde))
    &amp;&amp;(!place_meeting(x+velocidad,y,objpuertarosa))
    {
    if (keyboard_check(vk_right)){ x = x + velocidad;}
    }
if (!place_meeting(x,y-velocidad,objmuro)
    &amp;&amp;(!place_meeting(x,y-velocidad,objpuerta)))
    &amp;&amp;(!place_meeting(x,y-velocidad,objpuertaclara))
    &amp;&amp;(!place_meeting(x,y-velocidad,objpuertaazul))
    &amp;&amp;(!place_meeting(x,y-velocidad,objpuertaroja))
    &amp;&amp;(!place_meeting(x,y-velocidad,objpuertaverde))
    &amp;&amp;(!place_meeting(x,y-velocidad,objpuertarosa))
    {
    if (keyboard_check(vk_up)){ y = y - velocidad;}
    }
if (!place_meeting(x,y+velocidad,objmuro)
    &amp;&amp;(!place_meeting(x,y+velocidad,objpuerta)))
    &amp;&amp;(!place_meeting(x,y+velocidad,objpuertaclara))
    &amp;&amp;(!place_meeting(x,y+velocidad,objpuertaazul))
    &amp;&amp;(!place_meeting(x,y+velocidad,objpuertaroja))
    &amp;&amp;(!place_meeting(x,y+velocidad,objpuertaverde))
    &amp;&amp;(!place_meeting(x,y+velocidad,objpuertarosa))
    {
    if (keyboard_check(vk_down)){ y = y + velocidad;}
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///gestion de llave
if (place_meeting(x,y, objllave))
    {
    with(objllave){instance_destroy();}
    llave=true;
    audio_play_sound(sndstarkey, 20,false);
    }
if (place_meeting(x,y, objllaveazul))
    {
    with(objllaveazul){instance_destroy();}
    llaveazul=true;
    audio_play_sound(sndstarkey, 20,false);
    }
if (place_meeting(x,y, objllaveamarilla))
    {
    with(objllaveamarilla){instance_destroy();}
    llaveamarilla=true;
    audio_play_sound(sndstarkey, 20,false);
    }
if (place_meeting(x,y, objllaveverde))
    {
    with(objllaveverde){instance_destroy();}
    llaveverde=true;
    audio_play_sound(sndstarkey, 20,false);
    }
if (place_meeting(x,y, objllaveroja))
    {
    with(objllaveroja){instance_destroy();}
    llaveroja=true;
    audio_play_sound(sndstarkey, 20,false);
    }
if (place_meeting(x,y, objllaverosa))
    {
    with(objllaverosa){instance_destroy();}
    llaverosa=true;
    audio_play_sound(sndstarkey, 20,false);
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///gestion de puertas

if(llaveroja)
    {
    if(place_meeting(x+velocidad,y,objpuertaroja))||
    (place_meeting(x-velocidad,y,objpuertaroja))||
    (place_meeting(x,y-velocidad,objpuertaroja))||
    (place_meeting(x,y+velocidad,objpuertaroja))
        {
        with(objpuertaroja){instance_destroy();}
        audio_play_sound(snddoor, 10, false);
        }
    }
if(llaveazul)
    {
    if(place_meeting(x+velocidad,y,objpuertaazul))||
    (place_meeting(x-velocidad,y,objpuertaazul))||
    (place_meeting(x,y-velocidad,objpuertaazul))||
    (place_meeting(x,y+velocidad,objpuertaazul))
        {
        with(objpuertaazul){instance_destroy();}
        audio_play_sound(snddoor, 10, false);
        }
    }
if(llaveverde)
    {
    if(place_meeting(x+velocidad,y,objpuertaverde))||
    (place_meeting(x-velocidad,y,objpuertaverde))||
    (place_meeting(x,y-velocidad,objpuertaverde))||
    (place_meeting(x,y+velocidad,objpuertaverde))
        {
        with(objpuertaverde){instance_destroy();}
        audio_play_sound(snddoor, 10, false);
        }
    }
if(llaverosa)
    {
    if(place_meeting(x+velocidad,y,objpuertarosa))||
    (place_meeting(x-velocidad,y,objpuertarosa))||
    (place_meeting(x,y-velocidad,objpuertarosa))||
    (place_meeting(x,y+velocidad,objpuertarosa))
        {
        with(objpuertarosa){instance_destroy();}
        audio_play_sound(snddoor, 10, false);
        }
    }
if(llave)
    {
    if(place_meeting(x+velocidad,y,objpuertaclara))||
    (place_meeting(x-velocidad,y,objpuertaclara))||
    (place_meeting(x,y-velocidad,objpuertaclara))||
    (place_meeting(x,y+velocidad,objpuertaclara))
        {
        with(objpuertaclara){instance_destroy();}
        audio_play_sound(snddoor, 10, false);
        }
    }
if(llaveamarilla)
    {
    if(place_meeting(x+velocidad,y,objpuerta))||
    (place_meeting(x-velocidad,y,objpuerta))||
    (place_meeting(x,y-velocidad,objpuerta))||
    (place_meeting(x,y+velocidad,objpuerta))
        {
        with(objpuerta){instance_destroy();}
        audio_play_sound(snddoor, 10, false);
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objenemigopadre">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
room_restart();
audio_play_sound(snddead, 20, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objmeta">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(room_exists(room_next(room)))
    {room_goto_next();}
    else
    {room_goto(nivel1);}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
